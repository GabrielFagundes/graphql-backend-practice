type Query {
    getTeams: [Team]!
    getTeamMembersByLeague(leagueCode: String!, teamName: String): [TeamMember]!
    getTeamByName(name: String!): Team
    teamMembers(teamId: ID!): [TeamMember]!
}

type Mutation {
    importLeague(leagueCode: String!): LeagueImportResponse
}

type Competition {
    id: ID!
    name: String!
    code: String!
    areaName: String!
}

type Team {
    id: ID!
    name: String
    tla: String
    shortName: String
    areaName: String
    address: String
    players: [Player]
    coach: Coach
}

type Player {
    id: ID!
    name: String!
    position: String!
    dateOfBirth: String!
    nationality: String!
}

type Coach {
    id: ID!
    name: String!
    dateOfBirth: String!
    nationality: String!
}

union TeamMember = Player | Coach

type LeagueImportResponse {
    success: Boolean
    message: String
    league: Competition
}
